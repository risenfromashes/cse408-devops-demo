services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - client
      - server
    networks:
      - todo-test-network
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
      args:
        - VITE_API_URL=/api/todos
    expose:
      - "80"
    depends_on:
      - server
    networks:
      - todo-test-network
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=todo_test_db
      - DB_LOGGING=false
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todo-test-network
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    volumes:
      - db_test_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=todo_test_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d todo_test_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - todo-test-network
    restart: unless-stopped

  e2e:
    build:
      context: ./e2e
      dockerfile: Dockerfile
    depends_on:
      - nginx
      - client
      - server
      - db
    environment:
      - CI=true
      - BASE_URL=http://nginx
    volumes:
      - ./e2e/playwright-report:/tests/playwright-report
      - ./e2e/test-results:/tests/test-results
    networks:
      - todo-test-network
    command: npm test

networks:
  todo-test-network:
    driver: bridge

volumes:
  db_test_data:
    driver: local